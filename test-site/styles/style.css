html {
  font-size: 10px;
  font-family: 'Open Sans', sans-serif;
  background-color: #00539F;

}


h1 {
  font-size: 60px;
  text-align: center;
}

p, li {
  font-size: 16px;
  line-height: 2.5;
  letter-spacing: 1px;
}

body {
  width: 600px;

  /*margin: 0 auto; — When you set two values on a property like margin
   or padding, the first value affects the element's top and bottom side
   (make it 0 in this case), and the second value the left and right side
   (here, auto is a special value that divides the available horizontal space
   evenly between left and right).*/

  margin: 10 auto;
  background-color: #FF9500;
  padding: 0 20px 20px 20px;
  border: 5px solid black;
}

h1 {
  margin: 0;
  padding: 20px 0;
  color: #00539F;
  text-shadow: 3px 3px 1px black;
  /*Text-shadow, which applies a text shadow to the text content of the element.
   Its four values are as follows:

    The first pixel value sets the horizontal offset of the shadow from the text —
    how far it moves across: a negative value should move it to the left.

    The second pixel value sets the vertical offset of the shadow from the text —
    how far it moves down, in this example; a negative value should move it up.

    The third pixel value sets the blur radius of the shadow —
    a bigger value will mean a more blurry shadow.

    The fourth value sets the base colour of the shadow*/
}

img {
  display: block;
  margin: 0 auto;

  /*Finally, we'll center the image to make it look better. We could use the margin: 0 auto
  trick again as we did earlier for the body, but we also need to do something else.
  The body element is block level, meaning it takes up space on the page and can have margin and
  other spacing values applied to it. Images, on the other hand, are inline elements, meaning they
  can't. So to apply margins to the image, we have to give the image block-level behavior using
  display: block;  */
}